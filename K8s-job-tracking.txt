#!/bin/bash

# Function to check job status
function check_job_status() {
  local job_name="$1"
  local job_status=$(kubectl get job "$job_name" -o jsonpath='{.status.succeeded}')

  if [[ -z "$job_status" ]]; then
    echo "Job '$job_name' is still running..."
    return 2  # Indicate job still running (different from error)
  fi

  if [[ "$job_status" == "true" ]]; then
    echo "Job '$job_name' completed successfully!"
    return 0  # Indicate successful completion
  else
    echo "Job '$job_name' failed!"
    kubectl describe job "$job_name"
    return 1  # Indicate failure
  fi
}

# Get the job name (optional argument)
job_name=${1:-""}

if [[ -z "$job_name" ]]; then
  echo "Error: Please provide the job name as an argument."
  exit 1
fi

# Keep checking job status until it finishes
while true; do
  # Check job status and handle return code
  local status_code=$(check_job_status "$job_name")
  if [[ $status_code -eq 0 ]]; then
    # Job succeeded, exit loop with success (0)
    exit 0
  elif [[ $status_code -eq 1 ]]; then
    # Job failed, exit loop with error (1)
    echo "Error: Job failed. Exiting..."
    exit 1
  else
    # Job still running, sleep and continue checking
    sleep 10  # Adjust sleep time as needed
  fi
done
